#!/bin/sh

### BEGIN INIT INFO
# Provides: mymerkyl
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Merkyl
# Description: Provides the Merkyl service
### END INIT INFO

# Change the next 3 lines to suit where you install your script and what you want to call it
DIR=/root/merkyl
DAEMON=$DIR/__init__.py
DAEMON_NAME=merkyl

# Add any command line options for your daemon here
DAEMON_OPTS="8192 $DIR/allowed.files"

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=root

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid
LOGFILE=/var/log/merkyl.log

. /etc/rc.d/init.d/functions

do_start () {
  if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE); then
    echo 'Service is already running' >&2
    return 1
  fi
  echo "Starting service..." >&2
  local CMD="python $DAEMON $DAEMON_OPTS &> \"$LOGFILE\" & echo \$!"
  su -c "$CMD" $DAEMON_USER > "$PIDFILE"
  if ! [[ $(iptables -L -n | grep "state NEW tcp dpt:8192") ]]; then
    iptables -I INPUT 6 -m state --state NEW -m tcp -p tcp --dport 8192 -j ACCEPT;
  fi
  echo "Service $DAEMON_NAME started" >&2
}

do_stop () {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo 'Service is not running' >&2
    return 1
  fi
  echo "Stopping the service..." >&2
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo "Service $DAEMON_NAME stopped" >&2
}

case "$1" in

start|stop)
do_${1}
;;

restart|reload|force-reload)
do_stop
do_start
;;

*)
echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
exit 1
;;

esac
exit 0
